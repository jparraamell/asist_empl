# Generated by Django 5.2.7 on 2025-10-02 06:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Charges',
            fields=[
                ('id_charge', models.AutoField(primary_key=True, serialize=False)),
                ('charge_name', models.CharField(help_text='Charge name (e.g., Manager, Developer)', max_length=100, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Charge creation date and time')),
            ],
            options={
                'verbose_name': 'Charge',
                'verbose_name_plural': 'Charges',
                'db_table': 'charges',
                'ordering': ['charge_name'],
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id_gender', models.AutoField(primary_key=True, serialize=False)),
                ('gender_name', models.CharField(help_text='Gender name (e.g., Male, Female)', max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Gender',
                'verbose_name_plural': 'Genders',
                'db_table': 'genders',
                'ordering': ['gender_name'],
            },
        ),
        migrations.CreateModel(
            name='IdentificationType',
            fields=[
                ('id_identification_type', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(help_text="Type of identification (e.g., Passport, Driver's License)", max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Identification Type',
                'verbose_name_plural': 'Identification Types',
                'db_table': 'identification_types',
                'ordering': ['type_name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id_employee', models.AutoField(primary_key=True, serialize=False)),
                ('qr_code', models.BigIntegerField(help_text='Unique numeric QR code for the employee', unique=True)),
                ('first_name', models.CharField(help_text="Employee's first name", max_length=50)),
                ('last_name', models.CharField(help_text="Employee's last name", max_length=50)),
                ('second_last_name', models.CharField(blank=True, help_text="Employee's second last name (if applicable)", max_length=50, null=True)),
                ('direction', models.CharField(blank=True, help_text="Employee's address", max_length=100, null=True)),
                ('identification_number', models.CharField(help_text='Unique identification number', max_length=20, unique=True)),
                ('number_phone', models.CharField(blank=True, help_text="Employee's phone number", max_length=15, null=True)),
                ('email', models.EmailField(help_text="Employee's email address", max_length=100, unique=True)),
                ('date_birthday', models.DateField(help_text="Employee's date of birth")),
                ('charge', models.ForeignKey(help_text="Employee's job position", on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='employees.charges')),
                ('created_by', models.ForeignKey(help_text='User who created this employee record', on_delete=django.db.models.deletion.PROTECT, related_name='employees_created', to=settings.AUTH_USER_MODEL)),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='employees.gender')),
                ('identification_type', models.ForeignKey(help_text='Type of identification', on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='employees.identificationtype')),
            ],
        ),
    ]
